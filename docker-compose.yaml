services:
  dnsmasq:
    image: jpillora/dnsmasq
    container_name: dnsmasq
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf
    ports:
     - "53:53/udp"
    restart: 'unless-stopped'
    deploy:
      resources:
        limits:
          memory: 100M

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`assistant.home`)"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
    depends_on:
      - homeassistant_db
    environment:
      RECORDER_DB_URL: mysql://homeassistant:${MYSQL_PASSWORD}@homeassistant_db/homeassistant?charset=utf8

  homeassistant_db:
    container_name: homeassistant_db
    image: mariadb
    restart: 'unless-stopped'
    environment:
      MARIADB_RANDOM_ROOT_PASSWORD: true
      MYSQL_DATABASE: homeassistant
      MYSQL_USER: homeassistant
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - ./home-assistant/store/mariadb:/var/lib/mysql

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    # user: uid:gid
    volumes:
      - /home/kroleg/jellyfin/config:/config
      - /home/kroleg/jellyfin/cache:/cache
      # - type: bind
      #   source: /path/to/media
      #   target: /media
      # - type: bind
      #   source: /path/to/media2
      #   target: /media2
      #   read_only: true
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    # environment:
    #   - JELLYFIN_PublishedServerUrl=http://example.com
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    # extra_hosts:
    #   - 'host.docker.internal:host-gateway'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`kino.home`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  traefik:
    image: traefik:v3.0.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    restart: 'unless-stopped'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
